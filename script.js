document.addEventListener("DOMContentLoaded", function () {
  // –û—Ç—Ä–∏–º—É—î–º–æ –∫–Ω–æ–ø–∫–∏ —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—ó —Ç–∞ –∫–∞—Ä—Ç–∫–∏ —Ç–æ–≤–∞—Ä—ñ–≤ (—è–∫—â–æ –≤–æ–Ω–∏ –≤–∂–µ —î –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ)
  const sizeButtons = document.querySelectorAll(".buttons button");
  const productCards = document.querySelectorAll(".product-card");
  let cart = JSON.parse(localStorage.getItem("cart")) || [];

  // –ö–Ω–æ–ø–∫–∞ –∫–æ—à–∏–∫–∞
  const cartButton = document.createElement("button");
  cartButton.textContent = "üõí –ö–æ—à–∏–∫";
  cartButton.className = "cart-button";
  document.querySelector("header").appendChild(cartButton);

  // –§—É–Ω–∫—Ü—ñ—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–Ω–æ–ø–∫–∏ –∫–æ—à–∏–∫–∞
  function updateCartButton() {
    const cart = JSON.parse(localStorage.getItem("cart")) || [];
    cartButton.textContent =
      cart.length > 0 ? `üõí –ö–æ—à–∏–∫ +${cart.length}` : "üõí –ö–æ—à–∏–∫";
  }
  updateCartButton();

  // –§—ñ–ª—å—Ç—Ä–∞—Ü—ñ—è —Ç–æ–≤–∞—Ä—ñ–≤ –∑–∞ —Ä–æ–∑–º—ñ—Ä–æ–º
  sizeButtons.forEach((button) => {
    button.addEventListener("click", function () {
      const selectedSize = this.textContent;
      if (selectedSize === "–í—Å—ñ") {
        productCards.forEach((card) => {
          card.style.display = "block";
        });
      } else {
        productCards.forEach((card) => {
          const productSize = card.getAttribute("data-size");
          card.style.display = productSize === selectedSize ? "block" : "none";
        });
      }
    });
  });

  // –î–æ–¥–∞–≤–∞–Ω–Ω—è —Ç–æ–≤–∞—Ä—ñ–≤ —É –∫–æ—à–∏–∫
  function addToCart(product) {
    // –ü–µ—Ä–µ–∫–æ–Ω—É—î–º–æ—Å—å, —â–æ –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å price —ñ—Å–Ω—É—î, —ñ–Ω–∞–∫—à–µ –ø—Ä–∏—Å–≤–æ—é—î–º–æ –¥–µ—Ñ–æ–ª—Ç–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è
    if (typeof product.price === "undefined" || product.price === null) {
      product.price = "–¶—ñ–Ω–∞ –Ω–µ –≤–∫–∞–∑–∞–Ω–∞";
    }
    cart.push(product);
    localStorage.setItem("cart", JSON.stringify(cart));
    updateCartButton();
    renderCartItems();
  }

  // –ú–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ –∫–æ—à–∏–∫–∞
  const cartModal = document.createElement("div");
  cartModal.className = "cart-modal hidden";
  cartModal.innerHTML = `
      <div class="cart-content">
        <span class="close-button">&times;</span>
        <h2>–í–∞—à –∫–æ—à–∏–∫</h2>
        <ul class="cart-items"></ul>
        <button class="clear-cart">–û—á–∏—Å—Ç–∏—Ç–∏ –∫–æ—à–∏–∫</button>
      </div>
    `;
  document.body.appendChild(cartModal);

  const cartItemsList = cartModal.querySelector(".cart-items");
  const closeButton = cartModal.querySelector(".close-button");
  const clearCartButton = cartModal.querySelector(".clear-cart");
  const modalOverlay = document.createElement("div");
  modalOverlay.className = "modal-overlay";
  document.body.appendChild(modalOverlay);

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—ñ–≤ —É –∫–æ—à–∏–∫—É
  function renderCartItems() {
    const cart = JSON.parse(localStorage.getItem("cart")) || [];
    cartItemsList.innerHTML = ""; // –û—á–∏—â–∞—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π –≤–º—ñ—Å—Ç

    if (cart.length === 0) {
      cartItemsList.innerHTML = "<p>–ö–æ—à–∏–∫ –ø–æ—Ä–æ–∂–Ω—ñ–π</p>";
    } else {
      cart.forEach((product, index) => {
        const li = document.createElement("li");
        // –Ø–∫—â–æ product.price –Ω–µ –≤–∏–∑–Ω–∞—á–µ–Ω–∞, –≤–∏–≤–æ–¥–∏–º–æ –¥–µ—Ñ–æ–ª—Ç–Ω–∏–π —Ç–µ–∫—Å—Ç
        const priceText =
          typeof product.price !== "undefined"
            ? `${product.price} –≥—Ä–Ω`
            : "–¶—ñ–Ω–∞ –Ω–µ –≤–∫–∞–∑–∞–Ω–∞";
        li.textContent = `${product.name} - ${product.size} - ${priceText}`;
        const removeButton = document.createElement("button");
        removeButton.textContent = "‚ùå";
        removeButton.onclick = function () {
          removeFromCart(index);
        };
        li.appendChild(removeButton);
        cartItemsList.appendChild(li);
      });
    }
  }

  function removeFromCart(index) {
    cart.splice(index, 1);
    localStorage.setItem("cart", JSON.stringify(cart));
    renderCartItems();
    updateCartButton();
  }

  function openCart() {
    renderCartItems();
    cartModal.classList.add("show");
    modalOverlay.classList.add("show");
  }

  function closeCart() {
    cartModal.classList.remove("show");
    modalOverlay.classList.remove("show");
  }

  cartButton.addEventListener("click", openCart);
  closeButton.addEventListener("click", closeCart);
  modalOverlay.addEventListener("click", closeCart);

  clearCartButton.addEventListener("click", function () {
    cart = [];
    localStorage.removeItem("cart");
    renderCartItems();
    updateCartButton();
  });

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—ñ–≤ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ
  function displayProducts(products) {
    const productContainer = document.querySelector(".products");
    productContainer.innerHTML = "";
    products.forEach((product) => {
      console.log(product); // –õ–æ–≥ –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –¥–∞–Ω–∏—Ö –ø—Ä–æ–¥—É–∫—Ç—É
      const productCard = document.createElement("div");
      productCard.className = "product-card";
      productCard.setAttribute("data-size", product.size);
      productCard.innerHTML = `
          <img src="${product.image}" alt="${product.name}">
          <h2>${product.name}</h2>
          <p>–†–æ–∑–º—ñ—Ä: ${product.size}</p>
          <p>${
            typeof product.price !== "undefined"
              ? product.price
              : "–¶—ñ–Ω–∞ –Ω–µ –≤–∫–∞–∑–∞–Ω–∞"
          } –≥—Ä–Ω</p>
          <button class="add-to-cart">–î–æ–¥–∞—Ç–∏ –≤ –∫–æ—à–∏–∫</button>
        `;
      // –î–æ–¥–∞—î–º–æ —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª –¥–æ–¥–∞–≤–∞–Ω–Ω—è —Ç–æ–≤–∞—Ä—É –≤ –∫–æ—à–∏–∫
      productCard
        .querySelector(".add-to-cart")
        .addEventListener("click", function () {
          addToCart(product);
        });
      productContainer.appendChild(productCard);
    });
  }

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—ñ–≤ –∑ localStorage
  function loadLocalProducts() {
    const products = JSON.parse(localStorage.getItem("products")) || [];
    displayProducts(products);
  }

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—ñ–≤ —É localStorage, —è–∫—â–æ —ó—Ö —â–µ –Ω–µ–º–∞—î
  function saveProductsToLocalStorage() {
    const products = [
      {
        name: "–ö—Ä–æ—Å—ñ–≤–∫–∏ Nike",
        size: "37",
        price: 1500,
        image: "shoe1.jpg",
      },
      {
        name: "–ö—Ä–æ—Å—ñ–≤–∫–∏ Adidas",
        size: "39",
        price: 1600,
        image: "shoe2.jpg",
      },
      {
        name: "–ö—Ä–æ—Å—ñ–≤–∫–∏ Puma",
        size: "41",
        price: 1700,
        image: "shoe3.jpg",
      },
    ];
    localStorage.setItem("products", JSON.stringify(products));
  }

  // –Ø–∫—â–æ –≤ localStorage –Ω–µ–º–∞—î —Ç–æ–≤–∞—Ä—ñ–≤, –∑–±–µ—Ä—ñ–≥–∞—î–º–æ —ó—Ö
  if (!localStorage.getItem("products")) {
    saveProductsToLocalStorage();
  }

  // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —Ç–æ–≤–∞—Ä–∏ –∑ localStorage –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ
  loadLocalProducts();

  // –Ø–∫—â–æ API –Ω–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è, –º–æ–∂–Ω–∞ –ø—Ä–∏–±—Ä–∞—Ç–∏ fetchProducts()
  // async function fetchProducts() {
  //   try {
  //     const response = await fetch("/api/products");
  //     const products = await response.json();
  //     displayProducts(products);
  //   } catch (error) {
  //     console.error("–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç–æ–≤–∞—Ä—ñ–≤:", error);
  //   }
  // }
  // fetchProducts();
});
